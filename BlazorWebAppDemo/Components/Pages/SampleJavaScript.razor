@page "/sample-js"
@inject IJSRuntime jsRuntime
@rendermode InteractiveServer


<h3>Sample JavaScript</h3>

<button @onclick="ShowAlert">Alert</button>
<br /><br />
<sapn>@confirmResult</sapn>
<button @onclick="ShowConfirm">Confirm</button>
<br />
<br />

<button onclick="callMethod()">Call Method</button>
<br />
<br />
<button @onclick="CallInvokeMethodJavascript">Call Instance Method</button>

@code {
	private string confirmResult;

	private void ShowAlert()
	{
		// 자바스크립트 함수에서 값을 반환하지 않는 경우에 사용됨
		// alert('message'); 구현
		jsRuntime.InvokeVoidAsync("alert", "Hello, World from C# Method");
	}

	private async Task ShowConfirm()
	{
		var result = await jsRuntime.InvokeAsync<bool>("confirm", "Do you need to proceed?");
		confirmResult = result.ToString();
	}

	private async Task CallInvokeMethodJavascript()
	{
		 // var contact = new Contact { FirstName = "John" };
		 // await jsRuntime.InvokeVoidAsync("callInstanceMethod", DotNetObjectReference.Create(contact)); // 작동X => 함수처럼 호출 메서드를 갖고 있지 않기 때문
		 await jsRuntime.InvokeVoidAsync("callInstanceMethod", DotNetObjectReference.Create(this));
	}

	[JSInvokable]
	public async Task<string> GetValueFromInstance()
	{
			return "Hello World from Instance";
	}

	[JSInvokable]
	public static Task<string> GetValueFromMethod()
	{
		return Task.FromResult<string>("Hello World");
	}
}
